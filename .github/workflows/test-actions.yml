name: Coud Pak Deployer git flow

env:
  CONFIG_DIR: ~/cpd-config
  STATUS_DIR: ~/cpd-status

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted

    steps:
      # Clone the deployer repo
      - name: Clone the deployer repo
        run: |
          cd ~
          rm -rf ~/cloud-pak-deployer
          git clone https://github.com/IBM/cloud-pak-deployer.git
          
      # Build the deployer
#       - name: Build the deployer
#         run: |
#           cd ~/cloud-pak-deployer
#           ./cp-deploy.sh build

  configure:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Retrieve the configuration under $GITHUB_WORKSPACE
        uses: actions/checkout@v3
        
      - name: Copy the configuration to the specified config dir
        run: |
          ls -lR
          mkdir -p $CONFIG_DIR
          rm -rfv $CONFIG_DIR/*
          cp -rv cpd-config/config $CONFIG_DIR/
        
      - name: Write OpenShift pull secret to temporary file
        env:
          OCP_PULLSECRET: ${{ secrets.OCP_PULLSECRET }}
        run: |
          echo $OCP_PULL_SECRET > ${{ runner.temp }}/ocp_pullsecret.json
          
      - name: Set vault secrets
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          ~/cloud-pak-deployer/cp-deploy.sh vault set -vs aws-access-key -vsv $AWS_ACCESS_KEY_ID
          ~/cloud-pak-deployer/cp-deploy.sh vault set -vs aws-secret-access-key -vsv $AWS_SECRET_ACCESS_KEY
          ~/cloud-pak-deployer/cp-deploy.sh vault set -vs ocp-pullsecret -vsf ${{ runner.temp }}/ocp_pullsecret.json
          ~/cloud-pak-deployer/cp-deploy.sh vault set -vs ocp-ssh-pub-key -vsf ~/.ssh/id_rsa.pub
                  
      - name: List vault secrets
        run: |
          ~/cloud-pak-deployer/cp-deploy.sh vault list
